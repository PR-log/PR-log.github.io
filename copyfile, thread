import shutil
import glob
import threading
import time
import os

lock = threading.Lock()
shared_index = 0

def copy(src_path, dst_path):
    files = glob.glob(src_path+'/**/*.jpg', recursive=True)

    print('target number of files = ', len(files))
    if not os.path.exists(dst_path):
        os.makedirs(dst_path)

    for file in files:
        shutil.copy2(file, dst_path)
        time.sleep(0.0005)
 
def copy_thread(files, dst_path):
    
    global shared_index
    files_lenth = len(files)

    while shared_index < files_lenth:
        lock.acquire
        filename = files[shared_index]
        shared_index += 1
        lock.release
        shutil.copy2(filename, dst_path)
        time.sleep(0.0005)

        if shared_index == files_lenth:
            break

def master(src_path, dst_path, thread_num):

    files = glob.glob(src_path+'/**/*.jpg', recursive=True)

    if not os.path.exists(dst_path):
        os.makedirs(dst_path)

    threads = []
    for n in range(thread_num):
        t1 = threading.Thread( target = copy_thread, args = (files, dst_path))
        t1.start()
        threads.append(t1)
        
    for t in threads:
        t.join()

if __name__ =='__main__':
    
    src_path = "/home/jee/Data/vworld_2020/15/"
    dst_path = "/home/jee/Data/vworld_2020/tmp"
    s = time.time()
    copy(src_path, dst_path)
    e = time.time()

    print("normal copy: elapsed time = ", e-s)
    thread_num = 8
    s = time.time()
    master(src_path, dst_path, thread_num)
    e = time.time()

    print("threaded copy:  elapsed time = ", e-s)
